[tox]
min_version = 4.0
requires =
    tox-pypi-filter>=0.14
envlist =
    py{39,310,311,312}
    build_docs
    codestyle
isolated_build = true

[testenv]
# The following option combined with the use of the tox-pypi-filter above allows
# project-wide pinning of dependencies, e.g. if new versions of pytest do not
# work correctly with pytest-astropy plugins. Most of the time the pinnings file
# should be empty.
# pypi_filter_requirements = https://raw.githubusercontent.com/sunpy/package-template/master/sunpy_version_pins.txt

# Run the tests in a temporary directory to make sure that we don't import
# the package from the source tree
changedir = .tmp/{envname}
description =
    run tests
# Pass through the following environment variables which may be needed for the CI
passenv =
    HOME
    WINDIR
    # A variable to tell tests we are on a CI system
    CI
    # Custom compiler locations (such as ccache)
    CC
    # Location of locales (needed by sphinx on some systems)
    LOCALE_ARCHIVE
    # If the user has set a LC override we should follow it
    LC_ALL
set_env =
    MPLBACKEND = agg

deps =
# The following indicates which extras will be installed
extras =
    all
    tests
commands =
    pytest \
    -vvv \
    --pyargs xrayvision \
    --cov-report=xml \
    --cov=xrayvision \
    --cov-config={toxinidir}/.coveragerc \
    {toxinidir}/docs \
    {posargs}

[testenv:build_docs]
allowlist_externals = sphinx-build
changedir = docs
description = invoke sphinx-build to build the HTML docs
extras =
    docs
    map
commands =
    pip freeze --all --no-input
    sphinx-build -W -b html . _build/html {posargs}

[testenv:codestyle]
skip_install = true
description = Run all style and file checks with pre-commit
deps =
    pre-commit
commands =
    python -V
    pre-commit install-hooks
    pre-commit run --color always --all-files --show-diff-on-failure
